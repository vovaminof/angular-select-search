angular.module("selectSearch",[]).directive("selectSearch",function($window,$filter,$timeout,$animate){return{restrict:"A",templateUrl:"templates/angular-select-search.html",scope:{itemsAll:"=selectSearch",value:"=ngModel",name:"@",selected:"=",ngRequired:"=",ngDisabled:"=",ssHeight:"@",ssClass:"@",ssId:"@",content:"@",key:"@",placeholder:"@"},controller:function($scope){$scope.items=$scope.itemsAll,$scope.ssHeight=$scope.ssHeight||200,$scope.content=$scope.content||"title",$scope.key=$scope.key||"value",$scope.placeholder=$scope.placeholder||"",$scope.index=-1,$scope.select=function(index,condition){index=parseInt(index),condition=angular.isDefined(condition)?condition:!0,condition&&($scope.index=index,angular.isDefined($scope.selected)&&($scope.selected=index),angular.isDefined($scope.items[index])&&($scope.value=$scope.items[index][$scope.key],$scope.title=$scope.items[index][$scope.content]))},$scope.dropup=!1,$scope.reposition=function(){var pos=$scope.dropdownMenu.getBoundingClientRect(),spaceTop=pos.top,spaceBot=$window.innerHeight-pos.bottom;!$scope.dropup&&16>spaceBot?$scope.dropup=!0:$scope.dropup&&6>spaceTop&&($scope.dropup=!1),pos.bottom-pos.top>$window.innerHeight/2&&($scope.dropup=!1),$scope.$apply()},$scope.opened=!1,$scope.toggle=function(ev){ev.preventDefault(),ev.stopPropagation(),$scope.opened=!$scope.opened,$scope.opened||$scope.touched(),$scope.fix()},$scope.close=function(){$scope.opened&&($scope.touched(),$scope.el.blur()),$scope.opened=!1,$scope.$apply(),$scope.fix()},$scope.fix=function(){$scope.filter="",$timeout(function(){$scope.opened?($scope.searchInput.focus(),angular.element($window).bind("keydown",$scope.keydown)):angular.element($window).unbind("keydown",$scope.keydown),$scope.reposition(),$scope.moveScroll()},10)},$scope.keydown=function(ev){27===ev.keyCode&&$scope.close(),40===ev.keyCode&&$scope.down(),38===ev.keyCode&&$scope.up(),13===ev.keyCode&&(ev.preventDefault(),ev.stopPropagation(),$scope.select($scope.index),$scope.close())},$scope.down=function(){$scope.index+1<$scope.items.length&&($scope.index++,$scope.$apply(),$scope.moveScroll())},$scope.up=function(){$scope.index-1;$scope.index-1>=0&&($scope.index-=1,$scope.$apply(),$scope.moveScroll())},$scope.moveScroll=function(){var ul=angular.element($scope.dropdownMenu).find("ul"),liElems=ul.find("li");Array.prototype.forEach.call(liElems,function(li,i){if(angular.element(li).hasClass("active")){var posLi=li.getBoundingClientRect(),posMenu=$scope.dropdownMenu.getBoundingClientRect();(posLi.bottom>posMenu.bottom||posLi.top>posMenu.top)&&(ul[0].scrollTop=(posLi.bottom-posLi.top)*i)}})},$scope.removeWatchers=$scope.$watch("[filter,value,itemsAll]",function(){$scope.items=$filter("filter")($scope.itemsAll,$scope.filter),$scope.index=-1,$scope.moveScroll()},!0),$scope.noop=function(ev){ev.preventDefault(),ev.stopPropagation()}},link:function(scope,element,attrs){scope.el=element,Array.prototype.forEach.call(element.find("div"),function(elem){angular.element(elem).hasClass("dropdown-menu")?scope.dropdownMenu=elem:angular.element(elem).hasClass("bs-searchbox")&&(scope.searchInput=angular.element(elem).find("input")[0])}),scope.touched=function(){var formController=element.controller("form");angular.isDefined(formController)&&angular.isDefined(scope.name)&&(formController[scope.name].$touched=!0,formController[scope.name].$untouched=!1,scope.ngRequired?formController[scope.name].$setValidity("required",angular.isDefined(scope.value)):formController[scope.name].$setValidity("required",!0)),$animate.setClass(element,"ng-touched","ng-untouched")},angular.element($window).bind("resize",scope.reposition).bind("scroll",scope.reposition).bind("click",scope.close),scope.$on("$destroy",function(){scope.removeWatchers(),angular.element($window).unbind("resize",scope.reposition).unbind("scroll",scope.reposition).unbind("click",scope.close)})}}});
angular.module("selectSearch").run(["$templateCache",function($templateCache){$templateCache.put("templates/angular-select-search.html",'<div ng-class="{ open: opened, dropup: dropup }"\n  class="btn-group bootstrap-select {{ssClass}}">\n    <button ng-click="toggle($event)"\n      id="{{ssId}}" ng-disabled="ngDisabled"\n      type="button" class="btn dropdown-toggle btn-default">\n        <span data-ng-show="!value" class="filter-option pull-left">{{placeholder}}</span>\n        <span data-ng-show="value" class="filter-option pull-left">{{title}}</span>\n        &nbsp;<span class="caret"></span>\n    </button>\n\n    <div ng-show="opened" class="dropdown-menu">\n        <div class="bs-searchbox">\n            <input ng-model="filter" ng-click="noop($event)" type="text"\n              class="input-block-level form-control" autocomplete="off" />\n        </div>\n        <ul ng-show="opened" class="dropdown-menu inner"\n          style="display: block; overflow-y: auto; min-height: 0px;"\n          ng-style="{ \'max-height\': ssHeight + \'px\' }">\n            {{ select(selected, (selected >= 0 && index === -1)) }}\n            <li ng-repeat="item in items | filter: filter"\n              ng-class="{ active: (index == $index) }">\n                {{ select($index, (index === -1 && item[key] == value)) }}\n                <a ng-click="select($index)">{{item[content]}}</a>\n            </li>\n        </ul>\n    </div>\n</div>')}]);